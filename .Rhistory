lenvar >= 200 & lenvar < 325 ~ "ADULT",
specvar == "SM" &
lenvar >=325 ~ "ADULT_PIC",
specvar == "NP" &
lenvar < 300 ~ "JUV",
specvar == "NP" &
lenvar >= 300 & lenvar < 450 ~ "ADULT",
specvar == "NP" &
lenvar >= 450 ~ "ADULT_PIC",
specvar == "WE" &
lenvar < 300 ~ "JUV",
specvar == "WE" &
lenvar >= 300 & lenvar < 375 ~ "ADULT",
specvar == "WE" &
lenvar >= 375 ~ "ADULT_PIC"))
} esle {
.data %>%
mutate(ls = case_when(specvar == "SM" &
lenvar < 100 ~ "SUB-JUV",
specvar == "SM" &
lenvar >= 100 & lenvar < 200 ~ "JUV",
specvar == "SM" &
lenvar >= 200 ~ "ADULT",
specvar == "NP" &
lenvar < 300 ~ "JUV",
specvar == "NP" &
lenvar >= 300 ~ "ADULT",
specvar == "WE" &
lenvar < 300 ~ "JUV",
specvar == "WE" &
lenvar >= 300 ~ "ADULT"))
}
}
life_stage2 <- function(.data, specvar, lenvar, piscivore = "FALSE", ...) {
.data %>%
if (piscivore == "TRUE") {
mutate(ls = case_when(specvar == "SM" &
lenvar < 100 ~ "SUB_JUV",
specvar == "SM" &
lenvar >= 100 & lenvar < 200 ~ "JUV",
specvar == "SM" &
lenvar >= 200 & lenvar < 325 ~ "ADULT",
specvar == "SM" &
lenvar >=325 ~ "ADULT_PIC",
specvar == "NP" &
lenvar < 300 ~ "JUV",
specvar == "NP" &
lenvar >= 300 & lenvar < 450 ~ "ADULT",
specvar == "NP" &
lenvar >= 450 ~ "ADULT_PIC",
specvar == "WE" &
lenvar < 300 ~ "JUV",
specvar == "WE" &
lenvar >= 300 & lenvar < 375 ~ "ADULT",
specvar == "WE" &
lenvar >= 375 ~ "ADULT_PIC"))
} esle {
mutate(ls = case_when(specvar == "SM" &
lenvar < 100 ~ "SUB-JUV",
specvar == "SM" &
lenvar >= 100 & lenvar < 200 ~ "JUV",
specvar == "SM" &
lenvar >= 200 ~ "ADULT",
specvar == "NP" &
lenvar < 300 ~ "JUV",
specvar == "NP" &
lenvar >= 300 ~ "ADULT",
specvar == "WE" &
lenvar < 300 ~ "JUV",
specvar == "WE" &
lenvar >= 300 ~ "ADULT"))
}
}
life_stage2 <- function(.data, specvar, lenvar, piscivore = "FALSE", ...) {
.data %>%
if (piscivore == "TRUE") {
mutate(ls = case_when(specvar == "SM" &
lenvar < 100 ~ "SUB_JUV",
specvar == "SM" &
lenvar >= 100 & lenvar < 200 ~ "JUV",
specvar == "SM" &
lenvar >= 200 & lenvar < 325 ~ "ADULT",
specvar == "SM" &
lenvar >=325 ~ "ADULT_PIC",
specvar == "NP" &
lenvar < 300 ~ "JUV",
specvar == "NP" &
lenvar >= 300 & lenvar < 450 ~ "ADULT",
specvar == "NP" &
lenvar >= 450 ~ "ADULT_PIC",
specvar == "WE" &
lenvar < 300 ~ "JUV",
specvar == "WE" &
lenvar >= 300 & lenvar < 375 ~ "ADULT",
specvar == "WE" &
lenvar >= 375 ~ "ADULT_PIC"))
}
# esle {
#             mutate(ls = case_when(specvar == "SM" &
#                                       lenvar < 100 ~ "SUB-JUV",
#                                   specvar == "SM" &
#                                       lenvar >= 100 & lenvar < 200 ~ "JUV",
#                                   specvar == "SM" &
#                                       lenvar >= 200 ~ "ADULT",
#                                   specvar == "NP" &
#                                       lenvar < 300 ~ "JUV",
#                                   specvar == "NP" &
#                                       lenvar >= 300 ~ "ADULT",
#                                   specvar == "WE" &
#                                       lenvar < 300 ~ "JUV",
#                                   specvar == "WE" &
#                                       lenvar >= 300 ~ "ADULT"))
#     }
}
life_stage2 <- function(.data, specvar, lenvar, piscivore = "FALSE", ...) {
.data %>%
if (piscivore == "TRUE") {
mutate(ls = case_when(specvar == "SM" &
lenvar < 100 ~ "SUB_JUV",
specvar == "SM" &
lenvar >= 100 & lenvar < 200 ~ "JUV",
specvar == "SM" &
lenvar >= 200 & lenvar < 325 ~ "ADULT",
specvar == "SM" &
lenvar >=325 ~ "ADULT_PIC",
specvar == "NP" &
lenvar < 300 ~ "JUV",
specvar == "NP" &
lenvar >= 300 & lenvar < 450 ~ "ADULT",
specvar == "NP" &
lenvar >= 450 ~ "ADULT_PIC",
specvar == "WE" &
lenvar < 300 ~ "JUV",
specvar == "WE" &
lenvar >= 300 & lenvar < 375 ~ "ADULT",
specvar == "WE" &
lenvar >= 375 ~ "ADULT_PIC"))
} else {
mutate(ls = case_when(specvar == "SM" &
lenvar < 100 ~ "SUB-JUV",
specvar == "SM" &
lenvar >= 100 & lenvar < 200 ~ "JUV",
specvar == "SM" &
lenvar >= 200 ~ "ADULT",
specvar == "NP" &
lenvar < 300 ~ "JUV",
specvar == "NP" &
lenvar >= 300 ~ "ADULT",
specvar == "WE" &
lenvar < 300 ~ "JUV",
specvar == "WE" &
lenvar >= 300 ~ "ADULT"))
}
}
library(UCRBtools)
library(UCRBtools)
library(UCRBtools)
library(UCRBtools)
library(UCRBtools)
library(UCRBtools)
'%!in%' <- function(x,y) !('%in%'(x,y))
'%!in%' <- function(x,y) !('%in%'(x,y))
library(UCRBtools)
a <- c("a", "b", "c")
b <- a %!in% "b"
library(UCRBtools)
'%!in!%' <- Negate(`%in%`)
library(UCRBtools)
library(UCRBtools)
force(is_piscivore)
force(reach)
force(life_stage)
force(dbf_io)
drive_auth(email = "cmichaud@utah.gov")
gs4_auth(token = drive_token())
# Locate the error check sheet on google drive
dat <- drive_find("(mdb_lkt)$")
reach_tbl <- range_read(dat,
range = "rch_lkt",
col_types = "nnccnncc")
# Authenticate to google drive
library(googledrive)
library(googlesheets4)
drive_auth(email = "cmichaud@utah.gov")
gs4_auth(token = drive_token())
# Locate the error check sheet on google drive
dat <- drive_find("(mdb_lkt)$")
reach_tbl <- range_read(dat,
range = "rch_lkt",
col_types = "nnccnncc")
devtools::use_data(reach_tbl, reach_tbl)
devtools::use_data(reach_tbl)
library(devtools)
devtools::use_data(reach_tbl)
usethis::use_data(reach_tbl)
library(UCRBtools)
cfs_to_acft <- function(mean_dis, period) {
mean_dis * 1.9835 * period
}
cfs_to_acft(mean_dis = 3200, period = 30)
cfs_to_acft(mean_dis = 3200, period = 365)
rvr_tbl <- readRDS("c:/Users/cmichaud/proj_mgt/pdo/pdo_123a/rvr_tbl.Rds")
View(rvr_tbl)
rvr_tbl$basin[36] <- "Lower Colorado"
usethis::use_data(rvr_tbl)
library(UCRBtools)
spp_tbl <- readRDS("c:/Users/cmichaud/proj_mgt/pdo/pdo_123a/spp_tbl.Rds")
spp_tbl <- readRDS("c:/Users/cmichaud/proj_mgt/pdo/pdo_123a/species_tbl.Rds")
View(spp_tbl)
spp_tbl <- readRDS("c:/Users/cmichaud/proj_mgt/pdo/pdo_123a/species_tbl.Rds") %>%
rename(spp_code = SpeciesCode)
library(dplyr)
spp_tbl <- readRDS("c:/Users/cmichaud/proj_mgt/pdo/pdo_123a/species_tbl.Rds") %>%
rename(spp_code = SpeciesCode)
View(spp_tbl)
spp_tbl <- readRDS("c:/Users/cmichaud/proj_mgt/pdo/pdo_123a/species_tbl.Rds")
View(spp_tbl)
usethis::use_data(spp_tbl)
library(UCRBtools)
data(package = UCRBtools)
library(UCRBtools)
data(package = UCRBtools)
native <- c("CS", "HB", "RT", "BT", "CH", "RZ", "FM", "BH", "BHRZ", "FR", "FB", "SU", "SD", "MF")
usethis::use_data(native)
library(UCRBtools)
rmi_coord <- sf::read_sf("c:/Users/cmichaud/proj_mgt/spat/geo_spatR/spatialite/ucrb.sqlite", layer = "ucrb_rmi_pt1")
View(rmi_coord)
usethis::use_data(rmi_coord)
library(UCRBtools)
load("C:/Users/cmichaud/proj_mgt/package/UCRBtools/data/rmi_coord.rda")
View(rmi_coord)
rmi_coord <- sf::read_sf("c:/Users/cmichaud/proj_mgt/spat/geo_spatR/spatialite/ucrb.sqlite", layer = "ucrb_rmi_pt1") %>%
mutate(loc_x = sf::st_coordinates(.$GEOMETRY)[1])
library(dplyr)
rmi_coord <- sf::read_sf("c:/Users/cmichaud/proj_mgt/spat/geo_spatR/spatialite/ucrb.sqlite", layer = "ucrb_rmi_pt1") %>%
mutate(loc_x = sf::st_coordinates(.$GEOMETRY)[1])
View(rmi_coord)
rmi_coord <- sf::read_sf("c:/Users/cmichaud/proj_mgt/spat/geo_spatR/spatialite/ucrb.sqlite", layer = "ucrb_rmi_pt1") %>%
st_transform(crs = 32612) %>%
mutate(loc_x = sf::st_coordinates(.$GEOMETRY)[1],
loc_y = sf::st_coordinates(.$GEOMETRY)[2]) %>%
usethis::use_data(rmi_coord)
rmi_coord <- sf::read_sf("c:/Users/cmichaud/proj_mgt/spat/geo_spatR/spatialite/ucrb.sqlite", layer = "ucrb_rmi_pt1") %>%
sf::st_transform(crs = 32612) %>%
mutate(loc_x = sf::st_coordinates(.$GEOMETRY)[1],
loc_y = sf::st_coordinates(.$GEOMETRY)[2]) %>%
sf::st_drop_geometry()
View(rmi_coord)
rmi_coord <- sf::read_sf("c:/Users/cmichaud/proj_mgt/spat/geo_spatR/spatialite/ucrb.sqlite", layer = "ucrb_rmi_pt1") %>%
sf::st_transform(crs = 32612) %>%
mutate(loc_x = sf::st_coordinates(GEOMETRY)[1],
loc_y = sf::st_coordinates(GEOMETRY)[2]) #%>%
View(rmi_coord)
rmi_coord <- sf::read_sf("c:/Users/cmichaud/proj_mgt/spat/geo_spatR/spatialite/ucrb.sqlite", layer = "ucrb_rmi_pt1") %>%
sf::st_transform(crs = 32612) %>%
mutate(loc_x = sf::st_coordinates(GEOMETRY)[[1]],
loc_y = sf::st_coordinates(GEOMETRY)[2]) #%>%
View(rmi_coord)
rmi_coord <- sf::read_sf("c:/Users/cmichaud/proj_mgt/spat/geo_spatR/spatialite/ucrb.sqlite", layer = "ucrb_rmi_pt1") %>%
sf::st_transform(crs = 32612) %>%
mutate(loc_x = sf::st_coordinates(GEOMETRY)[[1]],
loc_y = sf::st_coordinates(GEOMETRY)[[2]]) #%>%
View(rmi_coord)
mapview::mapview(rmi_coord)
load("C:/Users/cmichaud/proj_mgt/package/UCRBtools/data/rvr_tbl.rda")
View(rvr_tbl)
load("C:/Users/cmichaud/proj_mgt/package/UCRBtools/data/reach_tbl.rda")
View(rvr_tbl)
View(reach_tbl)
View(rvr_tbl)
View(rvr_tbl)
View(reach_tbl)
rch_tbl <- reach_tbl %>%
mutate(rvr_code = case_when(rvr_id == 1 ~ "CO",
rvr_id == 2 ~ "GR",
rvr_id == 3 ~ "SJ",
rvr_id == 4 ~ "DO",
rvr_id == 11 ~ "LP",
rvr_id == 12 ~ "GRCA"))
library(dplyr)
rch_tbl <- reach_tbl %>%
mutate(rvr_code = case_when(rvr_id == 1 ~ "CO",
rvr_id == 2 ~ "GR",
rvr_id == 3 ~ "SJ",
rvr_id == 4 ~ "DO",
rvr_id == 11 ~ "LP",
rvr_id == 12 ~ "GRCA"))
View(rch_tbl)
View(rch_tbl)
View(rch_tbl)
View(rch_tbl)
rch_tbl <- reach_tbl %>%
mutate(rvr_code = case_when(rvr_id == 1 ~ "CO",
rvr_id == 2 ~ "GR",
rvr_id == 3 ~ "SJ",
rvr_id == 4 ~ "DO",
rvr_id == 11 ~ "LP",
rvr_id == 12 ~ "GRCA")) %>%
select(rch_id, rvr_code, rch_code:dn_name)
View(rch_tbl)
river_tbl <- readRDS("c:/Users/cmichaud/proj_mgt/pdo/pdo_123a/rvr_tbl.Rds")
river_tbl <- rvr_tbl
usethis::use_data(river_tbl)
reach_tbl <- reach_tbl %>%
mutate(rvr_code = case_when(rvr_id == 1 ~ "CO",
rvr_id == 2 ~ "GR",
rvr_id == 3 ~ "SJ",
rvr_id == 4 ~ "DO",
rvr_id == 11 ~ "LP",
rvr_id == 12 ~ "GRCA")) %>%
select(rch_id, rvr_code, rch_code:dn_name)
View(reach_tbl)
usethis::use_data(reach_tbl)
endangerd <- c("CS", "RZ", "HB", "BT")
usethis::use_data(endangered)
end_spp <- c("CS", "RZ", "HB", "BT")
usethis::use_data(end_spp)
library(UCRBtools)
data(package = UCRBtools)
data(package = "UCRBtools")
load("C:/Users/cmichaud/proj_mgt/package/UCRBtools/data/native.rda")
nat_spp <- native
usethis::use_data(nat_spp)
spp_end <- c("CS", "RZ", "HB", "BT")
usethis::use_data(spp_end)
spp_nat <- native
usethis::use_data(spp_nat)
spp_com <- c("CS", "RZ", "HB", "BT", "SD", "FM", "BH", "RT", "SM", "BC", "WF",
"LG", "BG", "GS", "GC", "BB", "YB", "WE", "GZ", "NP", "WS", "CH")
usethis::use_data(spp_com)
library(UCRBtools)
class(spp_com)
typeof(spp_com)
str(spp_com)
attr(spp_com)
attributes(spp_com)
library(UCRBtools)
library(UCRBtools)
data(package = "UCRBtools")
data(package = "UCRBtools")
reach_tbl
tbl_reach
tbl_reach <- reach_tbl
tbl_reach <- tbl_reach
load("C:/Users/cmichaud/proj_mgt/package/UCRBtools/data/tbl_reach.rda")
load("C:/Users/cmichaud/proj_mgt/package/UCRBtools/data/tbl_river.rda")
load("C:/Users/cmichaud/proj_mgt/package/UCRBtools/data/tbl_spp.rda")
tbl_reach <- reach_tbl
tbl_reach <- reach_tbl
tbl_river <- river_tbl
tbl_spp <- spp_tbl
usethis::use_data(tbl_reach)
usethis::use_data(tbl_river)
usethis::use_data(tbl_spp)
library(UCRBtools)
data(package = "UCRBtools")
library(UCRBtools)
library(UCRBtools)
library(UCRBtools)
library(UCRBtools)
library(UCRBtools)
library(UCRBtools)
library(httr)
library(readxl)
library(dplyr)
library(lubridate)
library(purrr)
?write_disk
library(UCRBtools)
library(UCRBtools)
library(UCRBtools)
?options
library(UCRBtools)
library(UCRBtools)
library(UCRBtools)
load("C:/Users/cmichaud/proj_mgt/package/UCRBtools/data/tbl_reach.rda")
View(tbl_reach)
tbl_reach$rch_code[tbl_reach$rch_code == "DINO"] <- "ECHO"
View(tbl_reach)
usethis::use_data(tbl_reach)
spp_com_se <- c("CS", "RZ", "SU", "CH", "SD", "BC", "CP", "RS", "SS", "FH",
"GA", "GS", "GZ", "WS", "CC", "BB", "LG", "SM", "PK", "UM", )
spp_com_se <- c("CS", "RZ", "SU", "CH", "SD", "BC", "CP", "RS", "SS", "FH",
"GA", "GS", "GZ", "WS", "CC", "BB", "LG", "SM", "PK", "UM")
usethis::use_data(spp_com_se)
library(UCRBtools)
spp_com_se <- c("CS", "RZ", "SU", "CH", "SD", "BH", "FM", "BC", "CP", "RS", "SS", "FH",
"GA", "GS", "GZ", "WS", "CC", "BB", "LG", "SM", "PK", "UM")
usethis::use_data(spp_com_se)
library(UCRBtools)
devtools::install_github(cmichaud92/UCRBtools)
devtools::install_github("cmichaud92/UCRBtools")
load("C:/Users/cmichaud/proj_mgt/package/UCRBtools/data/tbl_reach.rda")
View(tbl_reach)
devtools::install_github("cmichaud92/UCRBtools")
devtools::install_github("cmichaud92/UCRBtools")
field_xlsx_wkbk <- function(.site_data,
.rare_data,
.ntf_data,
.year,
.study,
.agency,
.output_path,
.overwrite) {
# Set Default options (only work on cols where data is present)
options("openxlsx.datetimeFormat" = "yyyy-mm-dd hh:mm:ss")            # Sets default date format
options("openxlsx.numFmt" = "0.0")                                    # Sets default numeric to 1 decimal place
# Set style formats for specific formatting requirements
n0 <- openxlsx::createStyle(numFmt = "0")                                        # Creates a style object for interger
n1<- openxlsx::createStyle(numFmt = "0.0")                                       # One decimal place
n4 <- openxlsx::createStyle(numFmt = "0.0000")                                   # Four decimal places
t <- openxlsx::createStyle(numFmt = "@")                                         # Text formatting
tm <- openxlsx::createStyle(numFmt = "yyyy-mm-dd hh:mm:ss")
# Rare Fish fmt
r_n0 <- c(8, 25)
r_n1 <- c(7, 12:14)
r_n4 <- c(26, 27)
r_t <- c(1:6, 10, 11, 15:24, 28, 29)
r_tm <- c(9)
#Site-effort
s_n0 <- c(16, 19, 21)
s_n1 <- c(9, 10, 17, 24:26)
s_n4 <- c(22, 23)
s_t <- c(1:8, 13:15, 18, 20, 27)
s_tm <- c(11, 12)
# Nontagged fish
n_n0 <- c(1, 2, 8, 12, 40)
n_n1 <- c(7, 14:16)
n_n4 <- c(41, 42)
n_t <- c(3:6, 10, 11, 13, 17:39, 43)
n_tm <- c(9)
# Create a blank workbook
B <- openxlsx::createWorkbook()
# Add worksheets and data
openxlsx::addWorksheet(wb = B, sheetName = "Rare Fish datasheet")                # Adds a blank sheet and names it
openxlsx::writeData(wb = B, sheet = 1, x = .rare_data)                            # Writes data to the blank sheet
# Add column formatting
openxlsx::addStyle(B, 1, style = n0,                                             # Associates styles to specific cols
rows = 2:(nrow(.rare_data)+1),
cols = r_n0,
gridExpand = TRUE)
openxlsx::addStyle(B, 1, style = n1,
rows = 2:(nrow(.rare_data)+1),
cols = r_n1,
gridExpand = TRUE)
openxlsx::addStyle(B, 1, style = n4,
rows = 2:(nrow(.rare_data)+1),
cols = r_n4,
gridExpand = TRUE)
openxlsx::addStyle(B, 1, style = t,
rows = 2:(nrow(.rare_data)+1),
cols = r_t,
gridExpand = TRUE)
openxlsx::addStyle(B, 1, style = tm,
rows = 2:(nrow(.rare_data)+1),
cols = r_tm,
gridExpand = TRUE)
# Add site data
openxlsx::addWorksheet(wb = B, sheetName = "Sample - Site-effort datasheet")    # Adds a blank sheet and names it
openxlsx::writeData(wb = B, sheet = 2, x = .site_data)
openxlsx::addStyle(B, 2, style = n0,                                             # Associates it with col 16
rows = 2:(nrow(.site_data)+1),
cols = s_n0,
gridExpand = TRUE)
openxlsx::addStyle(B, 2, style = n1,
rows = 2:(nrow(.site_data)+1),
cols = s_n1,
gridExpand = TRUE)
openxlsx::addStyle(B, 2, style = n4,
rows = 2:(nrow(.site_data)+1),
cols = s_n4,
gridExpand = TRUE)
openxlsx::addStyle(B, 2, style = t,
rows = 2:(nrow(.site_data)+1),
cols = s_t,
gridExpand = TRUE)
openxlsx::addStyle(B, 2, style = tm,
rows = 2:(nrow(.site_data)+1),
cols = s_tm,
gridExpand = TRUE)
# Add nontagged fish data
openxlsx::addWorksheet(wb = B, sheetName = "Non-tagged Fish datasheet")
openxlsx::writeData(wb = B, sheet = 3, x = .ntf_data)
openxlsx::addStyle(B, 3, style = n0,                                             # Associates it with col 16
rows = 2:(nrow(.ntf_data)+1),
cols = n_n0,
gridExpand = TRUE)
openxlsx::addStyle(B, 3, style = n1,
rows = 2:(nrow(.ntf_data)+1),
cols = n_n1,
gridExpand = TRUE)
openxlsx::addStyle(B, 3, style = n4,
rows = 2:(nrow(.ntf_data)+1),
cols = n_n4,
gridExpand = TRUE)
openxlsx::addStyle(B, 3, style = t,
rows = 2:(nrow(.ntf_data)+1),
cols = n_t,
gridExpand = TRUE)
openxlsx::addStyle(B, 3, style = tm,
rows = 2:(nrow(.ntf_data)+1),
cols = n_tm,
gridExpand = TRUE)
openxlsx::saveWorkbook(wb = B, file = file.path(.output_path, paste0(paste("STReaMS_field-collection_fmt", .study, .agency, .year, sep = "_"), ".xlsx")),
overwrite = .overwrite)
}
devtools::install_github("cmichaud92/UCRBtools")
load("~/Projects/ucrb-pdo_packages-UCRBtools/data/tbl_georch.rda")
View(tbl_georch)
load("C:/Users/cmichaud/Projects_git/ucrb-pdo_packages-UCRBtools/data/tbl_rvr.rda")
View(tbl_rvr)
devtools::install_github("cmichaud92/UCRBtools")
